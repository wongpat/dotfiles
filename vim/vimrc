call plug#begin('~/.vim/bundle')

" pwong bundles
" Base vim bundles
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" Git integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
" Syntax linting
Plug 'w0rp/ale'
" Emmet for magical html editing
Plug 'mattn/emmet-vim'

" React/jsx syntax highlighting
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
" csv
Plug 'chrisbra/csv.vim'
Plug 'tmhedberg/SimpylFold'
Plug 'Konfekt/FastFold'
" python
Plug 'vim-python/python-syntax'
Plug 'metakirby5/codi.vim'
"Plug 'sheerun/vim-polyglot'

" fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" pwong colors
Plug 'arcticicestudio/nord-vim'
call plug#end()

""" Tabbing behavior - ensure 4 spaces
set tabstop=4 expandtab softtabstop=4 shiftwidth=4 autoindent
" display indentation guides
set list listchars=tab:❘-,trail:·,extends:»,precedes:«,nbsp:×
" case insensitive and smart case
set ignorecase smartcase
" Show linenumbers
set number
" Linebreak behavior
set linebreak
" Incremental search
set incsearch
" Highlight search
set hlsearch
" Allow regex searching
set magic
" C-style indent
set cindent

let mapleader=' '

" file preview (need ruby and rouge for syntax highlighting. gem install
" rouge)
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

" Open files in horizontal split
nnoremap <silent> <Leader>s :call fzf#run({
\   'down': '40%',
\   'sink': 'botright split' })<CR>

" Open files in vertical horizontal split
nnoremap <silent> <Leader>v :call fzf#run({
\   'right': winwidth('.') / 2,
\   'sink':  'vertical botright split' })<CR>


" Use jsx for js files as well
let g:jsx_ext_required = 0
let b:javascript_enable_domhtmlcss = 1

" For vim-airline
set laststatus=2
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 0
let g:airline_symbols = {}
let g:airline_symbols.linenr = ''
let g:airline_symbols.branch = ''

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
let g:SimpylFold_docstring_preview = 1

colorscheme nord

" Remove trailing space upon save
autocmd BufWritePre * :%s/\s\+$//e
" convert tabs to spaces before writing file
autocmd BufWritePre * set expandtab | retab! 4

""" Ale
let g:ale_sign_error = '✗✗'
let g:ale_sign_warning = '∆∆'

""" python
let g:python_highlight_all = 1

set cursorline

set diffopt+=iwhite

set mouse=a

set clipboard+=unnamed

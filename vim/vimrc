call plug#begin('~/.vim/bundle')

" pwong bundles
" Base vim bundles
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" Git integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
" Syntax linting
Plug 'scrooloose/syntastic'
" Emmet for magical html editing
Plug 'mattn/emmet-vim'

" React/jsx syntax highlighting
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
" csv
Plug 'chrisbra/csv.vim'
" python
Plug 'tmhedberg/SimpylFold'
Plug 'Konfekt/FastFold'
" autocomplete
Plug 'davidhalter/jedi-vim'

" fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" pwong colors
Plug 'arcticicestudio/nord-vim', { 'branch': 'develop' }
call plug#end()

""" Tabbing behavior - ensure 4 spaces
set tabstop=4 expandtab softtabstop=4 shiftwidth=4 autoindent
" display indentation guides
set list listchars=tab:❘-,trail:·,extends:»,precedes:«,nbsp:×
" case insensitive and smart case
set ignorecase smartcase
" Show linenumbers
set number
" Linebreak behavior
set linebreak
" Incremental search
set incsearch
" Highlight search
set hlsearch
" Allow regex searching
set magic
" C-style indent
set cindent

" file preview (need ruby and rouge for syntax highlighting. gem install
" rouge)
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

" Use jsx for js files as well
let g:jsx_ext_required = 0
let b:javascript_enable_domhtmlcss = 1

" For vim-airline
set laststatus=2
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols = {}
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.branch = '⎇'

" Enable folding
set foldmethod=indent
set foldlevel=99
" Enable folding with the spacebar
nnoremap <space> za
let g:SimpylFold_docstring_preview = 1

colorscheme nord

" Remove trailing space upon save
autocmd BufWritePre * :%s/\s\+$//e
" convert tabs to spaces before writing file
autocmd BufWritePre * set expandtab | retab! 4

""" Syntastic
let g:syntastic_error_symbol = '✗'
let g:syntastic_style_error_symbol = 's✗'
let g:syntastic_warning_symbol = '⚠'
let g:syntastic_style_warning_symbol = 's⚠'
